{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/ayendi/projects/freelance/Equipment-ng-frontend/src/schema/signupSchema.js"],"sourcesContent":["import { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\n\nexport const signUpSchema = z.object({\n    surname: z.string().min(2, 'Surname must be at least 2 characters'),\n    name: z.string().min(2, 'Name must have atleast 2 characters'),\n    password: z\n        .string()\n        .min(8, 'Password must be atleast 8 characters')\n        .regex(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n            'Password must contain at least one uppercase letter, one lowercase letter, and one number'\n        ),\n    confirmPassword: z.string(),\n    terms: z.boolean().refine((val) => val  === true, 'You must accept the terms'),\n}).refine((data) => data.password === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: ['confirmPassword'],\n});\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC3B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,UAAU,oIAAA,CAAA,IAAC,CACN,MAAM,GACN,GAAG,CAAC,GAAG,yCACP,KAAK,CACF,mCACA;IAER,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM;IACzB,OAAO,oIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,MAAQ,QAAS,MAAM;AACtD,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IACxD,SAAS;IACT,MAAM;QAAC;KAAkB;AAC7B"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/ayendi/projects/freelance/Equipment-ng-frontend/src/components/auth/signup.js"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { Eye, EyeOff } from 'lucide-react';\nimport { signUpSchema } from \"@/schema/signupSchema\";\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FaApple } from \"react-icons/fa\";\n\nexport default function SignUpForm() {\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: zodResolver(signUpSchema),\n    });\n\n    const onSubmit = async(data) => {\n        try {\n            setIsLoading(true);\n            console.log(data);\n        } catch (error) {\n            console.error('Error:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-white flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n            <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n                <h2 className=\"text-center text-3xl font-bold tracking-tight text-gray-900\">\n                    Welcome to Equipment.ng\n                </h2>\n                <p className=\" text-center text-xl mt-2\">Sign up</p>\n            </div>\n\n            <div className=\"mt-2 sm:mx-auto sm:w-full sm:max-w-md\">\n                <div className=\"bg-white py-8 sm:rounded-lg sm:px-10\">\n                    <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n                        <div>\n                            \n                            <input \n                                {...register('surname')}\n                                type=\"text\"  \n                                className=\"mt-1 block w-full border rounded-md border-gray-300 px-3 py-1 shadow-sm focus:border-[#2A2F38]  focus:outline-none focus:ring-yellow-500\"\n                                placeholder=\"Surname\"\n                                />\n                                {errors.surname && (\n                                    <p className=\"mt-1 text-sm text-red-600\">\n                                        {errors.surname.message}\n                                    </p>\n                                )}\n                        </div>\n                      \n                           \n                            <input \n                                {...register('name')}\n                                type=\"text\"\n                                className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm px-3 py-2 font:border-yellow-500 focus: outline-none focus: ring-yellow-500\"\n                                placeholder=\"Name\"\n                            />\n                            {/* {errors.name & (\n                                <p className=\"mt-1 text-sm font-medium text-gray-700\">{errors.name.message}</p> \n                            )} */}\n                         <div>\n             \n              <input\n                {...register('email')}\n                type=\"email\"\n                className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-1 shadow-sm focus:border-[#2A2F38]  focus:outline-none focus:ring-yellow-500\"\n                placeholder=\"Email\"\n              />\n              {errors.email && (\n                <p className=\"mt-1 text-sm text-red-600\">\n                  {errors.email.message}\n                </p>\n              )}\n            </div>\n\n            <div>\n      \n              <div className=\"relative\">\n                <input\n                  {...register('password')}\n                  type={showPassword ? 'text' : 'password'}\n                  className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-1 shadow-sm focus:border-[#2A2F38]  focus:outline-none focus:ring-yellow-500\"\n                  placeholder=\"Password\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-500\" />\n                  )}\n                </button>\n              </div>\n              {errors.password && (\n                <p className=\"mt-1 text-sm text-red-600\">\n                  {errors.password.message}\n                </p>\n              )}\n            </div>\n\n            <div>\n              \n              <div className=\"relative\">\n                <input\n                  {...register('confirmPassword')}\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-1 shadow-sm focus:border-[#2A2F38]  focus:outline-none focus:ring-yellow-500\"\n                  placeholder=\"Confirm Password\"\n               />\n                <button\n                  type=\"button\"\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-500\" />\n                  )}\n                </button>\n              </div>\n              {errors.confirmPassword && (\n                <p className=\"mt-1 text-sm text-red-600\">\n                  {errors.confirmPassword.message}\n                </p>\n              )}\n            </div>\n\n                <div className=\"flex items-center\">\n                <input\n                    {...register('terms')}\n                    type=\"checkbox\"\n                    className=\"h-4 w-4 rounded border-gray-300  px-3 py-1 text-yellow-600 focus:ring-yellow-500\"\n                />\n                <label\n                    htmlFor=\"terms\"\n                    className=\"ml-2 block text-sm text-gray-900\"\n                >\n                    Yes, I understand and agree to Equipment.ng <span className='font-bold'>Terms of Service</span> , including the\n                    \n                    <span className='font-bold'> User Agreement and Privacy Policy</span>\n               \n                </label>\n                </div>\n                {errors.terms && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.terms.message}</p>\n                )}\n\n                <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full flex justify-center py-3 px-5 border border-transparent rounded-md shadow-sm text-sm rounded-full font-medium text-white bg-[#2A2F38]  hover:bg-[#2A2F38] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 disabled:opacity-50\"\n                >\n                {isLoading ? 'Signing up...' : 'Sign Up to Equipment.ng'}\n                </button>\n\n                <div className=\"mt-6\">\n                <div className=\"relative\">\n                    <div className=\"absolute inset-0 flex items-center\">\n                    <div className=\"w-full border-t border-gray-300\" />\n                    </div>\n                    <div className=\"relative flex justify-center text-sm\">\n                    <span className=\"px-2 bg-white text-gray-500\">\n                        Or continue with\n                    </span>\n                    </div>\n                </div>\n\n                <div className=\"mt-5 grid grid-cols-2 gap-3\">\n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex items-center justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                >\n                  <FaApple className=\"mr-2\" />\n                  <span>Sign up with Apple</span>\n                </button>\n                \n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex items-center justify-center py-2 px-3 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                >\n                  <FcGoogle className=\"mr-2\" />\n                  <span>Sign up with Google</span>\n                </button>\n              </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n       \n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}